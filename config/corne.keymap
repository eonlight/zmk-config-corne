// mouse movement
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;
};

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <190>; // leave at 190
};

// define layers
#define BLYR 0
#define LLYR 1
#define RLYR 2
#define NLYR 3
#define QLYR 4
#define SLYR 5


/ {

// ----------------------------------------------------------------------------|
// |  0  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  10 |  11 |
// |  12 |  13 |  14 |  15 |  16 |  17 |   |  18 |  19 |  20 |  21 |  22 |  23 |
// |  24 |  25 |  26 |  27 |  28 |  29 |   |  30 |  31 |  32 |  33 |  34 |  35 |
//                   |  36 |  37 |  38 |   |  39 |  40 |  41 |
// ----------------------------------------------------------------------------|

    combos {
        compatible = "zmk,combos";

        combo_left_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        combo_left_del {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp DEL>;
        };

        combo_left_tab {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp TAB>;
        };

        combo_left_home_tab {
            // lowered the timeout because it was being triggered too often
            timeout-ms = <20>;
            key-positions = <15 16>;
            bindings = <&kp TAB>;
        };

        combo_left_bspc {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp BSPC>;
        };

    };

    // when layer LEFT and RIGHT are pressed go to NAV layer
    // conditional_layers {
    //    compatible = "zmk,conditional-layers";
    //    tri_layer {
    //        if-layers = <LLYR RLYR>;
    //        then-layer = <NLYR>;
    //    };
    // };

    behaviors {
        tdll: tap_dance_layer_left {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MO_LAYERS_LEFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LLYR>, <&to QLYR>, <&to SLYR>;
        };

        tdlr: tap_dance_layer_right {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MO_LAYERS_RIGHT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo RLYR>, <&mo NLYR>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


// ------------------------------------------------------------------------------|
// | NONE |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  | NONE |
// | NONE |  A  |  R  |  S  |  T  |  G  |   |  K  |  N  |  E  |  I  |  O  | NONE |
// | NONE |  Z  |  X  |  C  |  D  |  V  |   |  H  |  H  |  ,  |  .  |  /  | NONE |
//                    | NON | LLR | SPC |   | RET | RLR | SLR |
// ------------------------------------------------------------------------------|
        default_layer {
            bindings = <
 &none &kp Q       &kp W      &kp F       &kp P      &kp B            &kp J    &kp L      &kp U       &kp Y      &kp SEMI    &none
 &none &mt LSHFT A &mt LALT R &mt LCTRL S &mt LGUI T &kp G            &kp K    &mt LGUI N &mt LCTRL E &mt LALT I &mt LSHFT O &none
 &none &kp Z       &kp X      &kp C       &kp D      &kp V            &kp M    &kp H      &kp COMMA   &kp DOT    &kp FSLH    &none
                              &none       &tdll      &kp SPACE        &kp RET  &tdlr      &mo SLYR
            >;
        };

// ------------------------------------------------------------------------------|
// | NONE |  1  |  2  |  3  |  4  |  5  |   |  =  |  <  |  >  |  y  |  _  | NONE |
// | NONE |  6  |  7  |  8  |  9  |  0  |   |  ?  |  '  |  |  |  &  |  -  | NONE |
// | NONE |  `  |  X  |  C  |  =  |  *  |   |  %  |  +  |  ,  |  "  |  \  | NONE |
//                    | NON | NON | SPC |   | DEL | NLR | NON |
// ------------------------------------------------------------------------------|
        left_layer {
            bindings = <
 &none &kp N1    &kp N2 &kp N3 &kp N4    &kp N5        &kp EQUAL &kp LT       &kp GT         &trans        &kp UNDER       &none
 &none &kp N6    &kp N7 &kp N8 &kp N9    &kp N0        &kp QMARK &mt LGUI SQT &mt LCTRL PIPE &mt LALT AMPS &mt LSHFT MINUS &none
 &none &kp GRAVE &trans &trans &kp EQUAL &kp STAR      &kp PRCNT &kp PLUS     &trans         &kp DQT       &kp BSLH        &none
                        &none  &trans    &trans        &kp DEL   &trans       &none
            >;
        };

// ------------------------------------------------------------------------------|
// | NONE |  !  |  @  |  [  |  ]  |  ^  |   | PUP | BLN | NON | ELN |  ;  | NONE |
// | NONE |  ~  |  $  |  (  |  )  |  #  |   | PDN | LTA | DNA | RTA | UPA | NONE |
// | NONE |  `  |  X  |  {  |  }  |  *  |   |  M  |  H  |  ,  |  .  |  /  | NONE |
//                    | NON | NLR | BSP |   | RET | NON | NON |
// ------------------------------------------------------------------------------|
        right_layer {
            bindings = <
 &none &kp EXCL        &kp AT        &kp LBKT       &kp RBKT      &kp CARET        &kp PG_UP  &kp LC(A) &none    &kp LC(E) &trans &none
 &none &mt LSHFT TILDE &mt LALT DLLR &mt LCTRL LPAR &mt LGUI RPAR &kp HASH         &kp PG_DN  &kp LEFT  &kp DOWN &kp RIGHT &kp UP &none
 &none &kp GRAVE       &trans        &kp LBRC       &kp RBRC      &kp STAR         &trans     &trans    &trans   &trans    &trans &none
                                    &none           &trans        &kp BSPC         &trans     &trans    &none
            >;
        };

// ------------------------------------------------------------------------------|
// | NONE | PSG | NSG | VDN | VUP |  ^  |   |  PP | SUP | MUP | SDN |  _  | NONE |
// | NONE |  ~  | LAL | LCT | LGI |  #  |   | PDN | MLT | MDN | MRT | RCL | NONE |
// | NONE |  `  |  X  | BDN | BUP |  *  |   |  M  | LCL |  ,  |  .  |  /  | NONE |
//                    | NON | BLR | MUT |   | BSP | NON | NON |
// ------------------------------------------------------------------------------|
        navigation_layer {
            bindings = <
 &none &kp C_PREV &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &trans            &kp C_PP &msc SCRL_UP   &mmv MOVE_UP   &msc SCRL_DOWN  &trans    &none
 &none &trans     &kp LALT   &kp LCTRL    &kp LGUI     &trans            &trans   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &mkp RCLK &none
 &none &trans     &trans     &kp C_BRI_DN &kp C_BRI_UP &trans            &trans   &mkp LCLK      &trans         &trans          &trans    &none
                             &none        &to BLYR     &kp C_MUTE        &trans   &trans         &none
            >;
        };

// ------------------------------------------------------------------------------|
// | NONE |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | NONE |
// | NONE |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  | NONE |
// | NONE |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | NONE |
//                    | NON | BLR | SPC |   | RET | RLR | NON |
// ------------------------------------------------------------------------------|
        qwerty_layer {
            bindings = <
 &none &kp Q &kp W &kp E &kp R    &kp T            &kp Y   &kp U    &kp I     &kp O   &kp P    &none
 &none &kp A &kp S &kp D &kp F    &kp G            &kp H   &kp J    &kp K     &kp L   &kp SEMI &none
 &none &kp Z &kp X &kp C &kp V    &kp B            &kp N   &kp M    &kp COMMA &kp DOT &kp FSLH &none
                   &none &to BLYR &kp SPACE        &kp RET &mo RLYR &none
            >;
        };

// ------------------------------------------------------------------------------|
// | NONE | BTL | TRN | TRN | SUL | TRN |   | BCL | BT0 | BT1 | BT2 | TRN | NONE |
// | NONE | TRN | TRN | TRN | TRN | TRN |   | TRN | TRN | TRN | TRN | TRN | NONE |
// | NONE | TRN | TRN | POF | PON | TRN |   | TRN | RON | ROF | TRN | TRN | NONE |
//                    | NON | BLR | TRN |   | TRN | TRN | NON |
// ------------------------------------------------------------------------------|
        system_layer {
            bindings = <
 &none &bootloader &trans &trans &studio_unlock              &trans        &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans &none
 &none &trans      &trans &trans &trans                      &trans        &trans &trans &trans &trans &trans &none
 &none &trans      &trans &ext_power EP_OFF &ext_power EP_ON &trans        &trans &rgb_ug RGB_ON &rgb_ug RGB_OFF &trans &trans &none
                          &none  &to BLYR                    &trans        &trans &trans &none
            >;
        };

    };
};
